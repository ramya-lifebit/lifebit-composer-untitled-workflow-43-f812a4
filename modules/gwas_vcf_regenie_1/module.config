params {
  gwas_vcf_regenie_1 {
    outdir = "results/"
    remove_outliers_maxiter = 5
    remove_outliers_sigma = 6
    miss_test_p_threshold = 1e-05
    regenie_min_mac = 5
    sex_check = true
    remove_related_samples = true
    run_ancestry_inference = true
    run_pca = true
    phenotype_colname = "false"
    q_filter = "0.005:minor"
    covariate_cols = "ALL"
    miss = 0.1
    maf = 0.05
    mind_threshold = 1e-05
    mac = 1
    king_coefficient = 0.0884
    king_plink_memory = 7000
    min_subpop_size = 100
    number_pcs = 20
    extracted_prune_region = true
    hwe_threshold = 1e-05
    hwe_test = "midp"
    ld_window_size = 50
    ld_step_size = 10
    ld_r2_threshold = 0.1
    pheno_transform = true
    }
}


process {
  withName: standardise_phenofile_and_get_samples {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: vcf2plink {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 6.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: filter_genotypic_data {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: merge_plink {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: check_sample_sex {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: ld_prune {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: calculate_relatedness {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: infer_ancestry {
    container = "quay.io/lifebitai/king:latest"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: filter_pca {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: transform_phenofile {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: create_ancestry_x_transform_pheno {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: add_pcs_to_pheno {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: align_pheno_with_test_variant_plink {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: filter_binary_missingness {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: convert2bgen {
    container = "quay.io/lifebitai/gwas:1.2dev"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: regenie_step1_fit_model {
    container = "quay.io/lifebitai/regenie:2.2.4"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: regenie_step2_association_testing {
    container = "quay.io/lifebitai/regenie:2.2.4"
    // Resources
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = { 8.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}
process {
  withName: munge_regenie {
    container = "quay.io/lifebitai/mungesumstats:1.0.0"
    // Resources
    cpus = 4
    memory = { 6.GB * task.attempt }
    time = { 16.h * task.attempt }
    // Error handling
    errorStrategy = "retry"
    maxRetries = "3"
    // Results
  }
}

